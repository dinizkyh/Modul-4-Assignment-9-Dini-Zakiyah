{
  "openapi": "3.0.0",
  "info": {
    "title": "Task Management API",
    "version": "1.0.0",
    "description": "API for managing users, lists, and tasks."
  },
  "servers": [
    {
      "url": "http://localhost:3000/api"
    }
  ],
  "tags": [
    { "name": "auth", "description": "Authentication endpoints" },
    { "name": "list", "description": "List management endpoints" },
    { "name": "task", "description": "Task management endpoints" }
  ],
  "paths": {
    "/lists/{listId}/tasks": {
      "post": {
        "tags": ["task"],
        "summary": "Add a task to a list",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "listId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TaskInput" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task added to list",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Task" }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["auth"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": { "description": "Validation error" }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["auth"],
        "summary": "Login user and return JWT token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "JWT token returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": { "type": "string" }
                  }
                }
              }
            }
          },
          "401": { "description": "Invalid credentials" }
        }
      }
    },
    "/lists": {
      "get": {
        "tags": ["list"],
        "summary": "Get all lists for authenticated user",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of user's lists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/List" }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      },
      "post": {
        "tags": ["list"],
        "summary": "Create a new list",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ListInput" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "List created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/List" }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/lists/{id}": {
      "get": {
        "tags": ["list"],
        "summary": "Get a list by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "List details",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/List" }
              }
            }
          },
          "404": { "description": "List not found" },
          "401": { "description": "Unauthorized" }
        }
      },
      "put": {
        "tags": ["list"],
        "summary": "Update a list by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ListInput" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List updated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/List" }
              }
            }
          },
          "404": { "description": "List not found" },
          "401": { "description": "Unauthorized" }
        }
      },
      "delete": {
        "tags": ["list"],
        "summary": "Delete a list by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "204": { "description": "List deleted" },
          "404": { "description": "List not found" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/tasks": {
      "get": {
        "tags": ["task"],
        "summary": "Get all tasks for authenticated user. Use sort=deadline to sort by deadline.",
        "description": "Returns all tasks for the authenticated user. If query parameter 'sort=deadline' is provided, tasks are sorted by deadline ascending.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "Sort tasks by deadline. Use 'deadline' as value.",
            "required": false,
            "schema": { "type": "string", "enum": ["deadline"] }
          }
        ],
        "responses": {
          "200": {
            "description": "List of user's tasks (sorted by deadline if requested)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Task" }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      },
      "post": {
        "tags": ["task"],
        "summary": "Create a new task",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TaskInput" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Task" }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/tasks/due-this-week": {
      "get": {
        "tags": ["task"],
        "summary": "Get tasks due this week",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of tasks due this week",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Task" }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/tasks/{id}/complete": {
      "patch": {
        "tags": ["task"],
        "summary": "Toggle complete status of a task",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "Task completion status toggled",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Task" }
              }
            }
          },
          "404": { "description": "Task not found" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "tags": ["task"],
        "summary": "Get a task by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "Task details",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Task" }
              }
            }
          },
          "404": { "description": "Task not found" },
          "401": { "description": "Unauthorized" }
        }
      },
      "put": {
        "tags": ["task"],
        "summary": "Update a task by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TaskInput" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task updated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Task" }
              }
            }
          },
          "404": { "description": "Task not found" },
          "401": { "description": "Unauthorized" }
        }
      },
      "delete": {
        "tags": ["task"],
        "summary": "Delete a task by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "204": { "description": "Task deleted" },
          "404": { "description": "Task not found" },
          "401": { "description": "Unauthorized" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "email": { "type": "string", "format": "email" },
          "password": { "type": "string", "minLength": 6 },
          "name": { "type": "string" }
        },
        "required": ["email", "password", "name"]
      },
      "List": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        },
        "required": ["id", "name", "createdAt", "updatedAt"]
      },
      "ListInput": {
        "type": "object",
        "properties": {
          "name": { "type": "string" }
        },
        "required": ["name"]
      },
      "Task": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "listId": { "type": "string" },
          "title": { "type": "string" },
          "description": { "type": "string" },
          "dueDate": { "type": "string", "format": "date-time" },
          "completed": { "type": "boolean" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        },
        "required": ["id", "listId", "title", "createdAt", "updatedAt"]
      },
      "TaskInput": {
        "type": "object",
        "properties": {
          "listId": { "type": "string" },
          "title": { "type": "string" },
          "description": { "type": "string" },
          "dueDate": { "type": "string", "format": "date-time" }
        },
        "required": ["listId", "title"]
      }
    }
  }
}
